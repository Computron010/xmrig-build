name: NoDevFee XMRIG (all)
on:
  # Manueel starte
  workflow_dispatch:

jobs:
  build_win:
    name: Build Windows artifacts
    runs-on: windows-latest
    steps:
      - name: Checkout Repository master branch
        uses: actions/checkout@v2
        with:
          repository: xmrig/xmrig
          ref: master  
      - name: Checkout deps
        run:  git clone https://github.com/xmrig/xmrig-deps.git
      - name: Build project on Windows
        run: |
          PowerShell "(Get-Content src/donate.h) -replace 'DonateLevel = 1','DonateLevel = 0' | Set-Content src/donate.h"
          cmake . -G "MinGW Makefiles" -DXMRIG_DEPS=xmrig-deps\gcc\x64
          make -j2
          copy src\config.json .
          copy bin\WinRing0\WinRing0x64.sys .
          7z a -tzip -mx windows_build.zip xmrig.exe config.json WinRing0x64.sys
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows_build
          path: windows_build.zip
    
  build_lin:
    runs-on: ubuntu-latest
    container: alpine:latest

    steps:
      - name: Checkout Repository master branch
        uses: actions/checkout@v2
        with:
          repository: xmrig/xmrig

      - name: Build
        run: |
          apk add git make cmake libstdc++ gcc g++ automake libtool autoconf linux-headers
          echo "XMRIG_VERSION="`cat src/version.h | grep -Eo "APP_VERSION\s+\"(.+?)\"" | awk -F "\"" '{print $2}'` >> $GITHUB_ENV
          sed -i 's/DonateLevel = 1/DonateLevel = 0/g' src/donate.h
          mkdir build
          cd scripts && ./build_deps.sh && cd ../build
          cmake .. -DXMRIG_DEPS=scripts/deps -DBUILD_STATIC=ON
          make -j$(nproc)
      - name: Store generated file
        uses: actions/upload-artifact@v2
        with:
          name: xmrig-${{ env.XMRIG_VERSION }}
          path: build/xmrig
    
  build_macos:
    name: Build MacOS artifacts
    runs-on: macos-latest
    steps:
      - name: Prepare MacOS tools
        run: |
          brew install cmake libuv openssl hwloc
      - name: Checkout Repository master branch
        uses: actions/checkout@v2
        with:
          repository: xmrig/xmrig
          ref: master

      - name: Build hwloc on MacOS
        run: |
          curl -O https://download.open-mpi.org/release/hwloc/v2.1/hwloc-2.1.0.tar.bz2
          tar xjf hwloc-2.1.0.tar.bz2
          cd hwloc-2.1.0
          ./configure --disable-shared --enable-static --disable-io --disable-libxml2
          make -j$(sysctl -n hw.logicalcpu)
          cd ..
      - name: Build project on MacOS
        run: |
          sed -i '' 's/DonateLevel = 1/DonateLevel = 0/g' src/donate.h
          echo "XMRIG_VERSION="`cat src/version.h | grep -Eo "APP_VERSION\s+\"(.+?)\"" | awk -F "\"" '{print $2}'` >> $GITHUB_ENV
          cmake . -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DHWLOC_INCLUDE_DIR=hwloc-2.1.0/include -DHWLOC_LIBRARY=hwloc-2.1.0/hwloc/.libs/libhwloc.a
          make -j$(sysctl -n hw.logicalcpu)
          cp src/config.json .
          tar cfz macos_build.tar.gz xmrig config.json
      - name: Upload MacOS build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: macos_xmrig-${{ env.XMRIG_VERSION }}
          path: macos_build.tar.gz
